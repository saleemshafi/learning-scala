package rosalind

import org.scalatest.FunSuite
import rosalind.CONV._
import scala.collection.mutable.Stack
 
class FULLTestSuite extends FunSuite {
  
  test("infer peptide from full spectrum with data from problem") {
    val masses =
"""1988.21104821
610.391039105
738.485999105
766.492149105
863.544909105
867.528589105
992.587499105
995.623549105
1120.6824591
1124.6661391
1221.7188991
1249.7250491
1377.8200091""".split("\r\n") map (a => BigDecimal.apply(a))
	expect("KEKEP") { FULL.proteinFromFullSpectrum(masses.head, masses.tail) }
  }

  test("infer peptide from full spectrum with real data") {
    val masses =
"""17767.0171215
3761.64497576
3862.69265576
3898.70388576
3999.75156576
4027.74647576
4128.79415576
4155.80505576
4243.82109576
4252.85781576
4372.86368576
4438.93712576
4509.92259576
4509.97423576
4609.04264576
4610.97027576
4724.06958576
4748.02918576
4887.13291576
4895.09759576
5001.17584576
5008.18165576
5130.21843576
5171.24498576
5231.26611576
5300.28757576
5332.31379576
5371.32468576
5433.36147576
5485.36761576
5580.42988576
5598.45167576
5637.45134576
5669.48878576
5766.49393576
5772.49797576
5837.53104576
5859.53000576
5936.59945576
6022.59333576
6035.66786576
6178.69444576
6182.73627576
6253.77338576
6291.77850576
6367.81631576
6419.87346576
6466.88472576
6476.89492576
6537.92183576
6563.92695576
6666.01679576
6666.93614576
6780.02020576
6794.11175576
6943.08353576
6957.17508576
7099.18464576
7113.27619576
7210.32895576
7255.28575576
7313.33814576
7369.32868576
7441.39672576
7484.35562576
7583.42403576
7588.46513576
7640.44549576
7719.50562576
7743.45468576
7776.52708576
7844.50236576
7962.60639576
8007.56569576
8093.64688576
8154.63410576
8194.69456576
8251.71602576
8267.71816576
8382.74510576
8388.77493576
8511.78769576
8525.83384576
8642.82818576
8653.92880576
8743.87586576
8767.97173576
8842.94427576
8924.07284576
8999.04538576
9023.14125576
9113.08831576
9124.18893576
9241.18327576
9255.22942576
9378.24218576
9384.27201576
9499.29895576
9515.30109576
9572.32255576
9612.38301576
9673.37023576
9759.45142576
9804.41072576
9922.51475576
9990.49003576
10023.5624358
10047.5114958
10126.5716258
10178.5519858
10183.5930858
10282.6614958
10325.6203958
10397.6884358
10453.6789758
10511.7313658
10556.6881658
10653.7409258
10667.8324758
10809.8420358
10823.9335858
10972.9053658
10986.9969158
11100.0809758
11101.0003258
11203.0901658
11229.0952858
11290.1221958
11300.1323958
11347.1436558
11399.2008058
11475.2386158
11513.2437358
11584.2808458
11588.3226758
11731.3492558
11744.4237858
11830.4176658
11907.4871158
11929.4860758
11994.5191458
12000.5231858
12097.5283358
12129.5657758
12168.5654458
12186.5872358
12281.6495058
12333.6556458
12395.6924358
12434.7033258
12466.7295458
12535.7510058
12595.7721358
12636.7986858
12758.8354658
12765.8412758
12871.9195258
12879.8842058
13018.9879358
13042.9475358
13156.0468458
13157.9744758
13257.0428858
13257.0945258
13328.0799958
13394.1534358
13514.1593058
13523.1960258
13611.2120658
13638.2229658
13739.2706458
13767.2655558
13868.3132358
13904.3244658
14005.3721458""".split("\r\n") map (a => BigDecimal.apply(a))

	expect("THEDEHTHFLYEANLACSYRLKGSCLYRRNDVGCTYFLDEMTVRNKHHGTMWGMFQCPRYKKAVNAFVVAEGFTTTENYDVAWPQE") { FULL.proteinFromFullSpectrum(masses.head, masses.tail) }
  }


}