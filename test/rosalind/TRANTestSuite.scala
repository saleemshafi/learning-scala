package rosalind

import org.scalatest.FunSuite
import rosalind.TRAN._
import scala.collection.mutable.Stack
 
class TRANTestSuite extends FunSuite {
  test("transitions and transversions with data from problem") {
    val data = 
""">Rosalind_0209
GCAACGCACAACGAAAACCCTTAGGGACTGGATTATTTCGTGATCGTTGTAGTTATTGGA
AGTACGGGCATCAACCCAGTT
>Rosalind_2200
TTATCTGACAAAGAAAGCCGTCAACGGCTGGATAATTTCGCGATCGTGCTGGTTACTGGC
GGTACGAGTGTTCCTTTGGGT""".split("\r\n").toList
	val proteins = GC.parseFASTA(data)
	
	val s1 = proteins(0)._2
	val s2 = proteins(1)._2
	expect(17) { transitionCount(s1, s2) }
    expect(14) { transversionCount(s1, s2) }
	expect(BigDecimal.apply("1.21429")) { ttRatio(s1, s2) }
  }

  test("transitions and transversions with real data") {
    val data = 
""">Rosalind_9374
TCCATAGCTATCCGCTGCTTCACATCGGACCAGGCCCCCCCGTTAACTCGGGCGGAGGTT
ATTAAGTACTAGAAACGCAGTCCTCTTTCTAATAGGATGGTTTCCCAGTTGAGCTAGTTA
GTTAATCAATCTAAAGCAACACTCTGACTATCATCGGCGTCCCCACATTCGTCATCCACC
GCTTGTGGGAATCGGGAGGCAGAGTCGAACCCCGCGAAAGACGCTCGGGCCTCCCTAGTG
TGTTATCTTCGCTCAAATCTGGATATCTCCAACATCTCCGTAGAGGGCTAATGTGTCCGC
CTAACTTGCTATCCGACTGGCCAAGTGTGGTAAGACTAGTAATGCAAACCATTTTCAGTG
GAGAAGCACCATGAGCGAGTCGATACAAGCTGTACCTTCAGTTTATAGAAGGGCGCTCGA
TTGGCTAGAGACTTTCACGTGTTAGCTAGATAAGGCCTGGGAGCTGAGGTGAGTATACCA
CATGCGGTCGCGCTCTTCTTATCGCTCTGACCGAAAAGCATTCATGGATTATTGGTACAA
GAGCGCATCTTGTGATGCCTTAATGCTTCCAATGTATGGGCCTCAGAGGATAATGTAAAA
TCCAACGCAGTCGTCTCGGCTATGTATCAACGTCTCCCGTTCCGAAACACCAATCGGACG
TGACATTCGGAGGGCCATCCTCATCCCTGGATAGATAGCACACCTATCCACATCTATTAT
GCCGTCTTTGGTCAAGTTCTACCAAGGCGGGCCAGCGTCGCCTCGTGTAACGATTTTCTT
TTCGGCCAGGAACCACCCATCGGTGATGGGGAACGTGGCAGAACCGGTACTCCCGTAACC
TAGGCCTAACCCCAACGCGCACAGGACGGTTACGCAGCCTTAGTGATGTCTACAGTTAAT
CTTAACGGCTGCGCGATGTCCGCGGGGGCTCAGAGGTCTGGCTACCAACGCATAGTCTGG
TCTGGCGTAGTTGGGTAAAATCTTTCAAA
>Rosalind_8320
CTCGTAGTTAGCCACTACTTCACATTGAACCAGGCCCCTCAATTAACTCTGTTGGGCATT
ATCAAATGCTAGAAGCATAGCCCCTTTTTTAGTAGGATGGTTCCCCAGTTGACCAATTCG
GTTAATTCATCCGAGGCAACACTCTGGCTATTATTAGTGCTCTCACTTTCGCCACGCCCC
GTCTGTGGGATTTGGTACGCAATGTGGAATTGCGCAAGAGCAGCTCCGGCCTCGCTGGCG
TGTTTTTTCCGTTCAAATTTCGGTGCTTCAAACACCTCCGAGGAAACCCAATATTTCCGC
CGGATTCATTAACGGGCTGACTAGGGGAGGTGAGCGTAGCAACCCTGATCACTCCCAGTG
GAAAACTATCGTGAGCGAGAAGATACAGGCTGTACCTTTAGTGTATAGAAGGGTACCAGA
TTGGTTTGGTAACTTCATGTGCCAGCTAGACAGGATCTGTTAACTGAGGTGGGTCTGTTA
GGTGCGACCGCGCTCCTCTTATCGTTCTGACCGAAAGGTATTCAGTCGTCGTTGGCAGAA
GAGCACACCTCGTGATGTTCCAATACTTTTAATGTGTCAGTTTAGGAAGCCGATACAGAG
TGCAACACATCCGTTTCGATAACGTGTCAGTGCCTTCCATTCCACAACACCCATCGGACG
TGGCATCAGATGGACCACCCTCATGCTTTGAGACATCGTACGCCTGTCTACATTTGTTTT
GTCATCTCCGGTCGTGTTTTGCCGAGGTAGGCCTACGTAATCTCGTGTAACGGTTTCTTT
TCCAGCCACGAACCACTAAACAGTAATGGGGAACGAGGCAAGCCCGGTACTCCCGTGACC
CGGGCCTTACCCTAATGTGTGCAGGACAGTTGAGCATATTTGCTGATGCCTACAGTTAAT
CTCGACGACCACGCGATGCTCACGGAAGCTCAAAAGTCTGTTAAACCATGCATAGTTTCG
TCCGAAGTAGCTTGGTGACATTTTTTAAA""".split("\r\n").toList
	val proteins = GC.parseFASTA(data)
	
	expect(BigDecimal.apply("2.45556")) { ttRatio(proteins(0)._2, proteins(1)._2) }
  }
}